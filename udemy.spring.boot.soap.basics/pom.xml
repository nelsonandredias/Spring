<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.java.springbootlearning</groupId>
	<artifactId>udemy.spring.boot.soap.basics</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>udemy.spring.boot.soap.basics</name>
	<description>Udemy Course Spring Boot Soap Basics</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web-services</artifactId>
		</dependency>
		
		<!-- jar to create wsdl  -->
		<dependency>
			<groupId>wsdl4j</groupId>
			<artifactId>wsdl4j</artifactId>
		</dependency>

		<!-- Begin Security Dependencies -->
		<!-- Spring Web Services Security -->
		<dependency>
    		<groupId>org.springframework.ws</groupId>
    		<artifactId>spring-ws-security</artifactId>
    		<version>3.0.6.RELEASE</version>
    		<exclusions>
    			<exclusion>
    				<groupId>org.springframework.security</groupId>
    				<artifactId>spring-security-core</artifactId>
    			</exclusion>
    		</exclusions>
    	</dependency>

		<!-- XWSS : XML and Web Services Security -->
		<dependency>
			<groupId>com.sun.xml.wss</groupId>
			<artifactId>xws-security</artifactId>
			<version>3.0</version>
			<exclusions>
				<exclusion>
					<groupId>javax.xml.crypto</groupId>
					<artifactId>xmldsig</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
			<version>1.1.1</version>
		</dependency>
		<!-- End Security Dependencies -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<!--  JAXB2 Maven Plugin - converts xml data into java objects and vice-versa, through xsd  
					For that, we need to define:
					1. where is xsd source folder
					2. where to create the java objects
					3. set to false the clear java source folder
			-->
			<plugin>
	            <groupId>org.codehaus.mojo</groupId>
	            <artifactId>jaxb2-maven-plugin</artifactId>
	            <version>1.6</version>
	            <executions>
	                <execution>
	                    <id>xjc</id>
	                    <goals>
	                        <goal>xjc</goal>
	                    </goals>
	                </execution>
	            </executions>
	            <configuration>
	            	<!-- where is located the xsd folder -->
	               <schemaDirectory>${project.basedir}/src/main/resources/static/xsd</schemaDirectory>
	               <!-- where will be generated the java objects -->
	               <packageName>com.java.springbootsoapbasics.xmlJavaObjects</packageName>
	               <outputDirectory>${project.basedir}/src/main/java</outputDirectory>
	               <!-- false to clear java objects folder -->
	               <clearOutputDir>false</clearOutputDir>
	            </configuration>
        	</plugin>
		</plugins>
	</build>

</project>
